{"id":"../node_modules/d3-geo/src/projection/mercator.js","dependencies":[{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\package.json","includedInParent":true,"mtime":1742042086953},{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\package.json","includedInParent":true,"mtime":1737120275660},{"name":"../math.js","loc":{"line":1,"column":51,"index":51},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\src\\projection\\mercator.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\src\\math.js"},{"name":"../rotation.js","loc":{"line":2,"column":21,"index":87},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\src\\projection\\mercator.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\src\\rotation.js"},{"name":"./index.js","loc":{"line":3,"column":23,"index":129},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\src\\projection\\mercator.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\src\\projection\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.mercatorProjection = mercatorProjection;\nexports.mercatorRaw = mercatorRaw;\nvar _math = require(\"../math.js\");\nvar _rotation = _interopRequireDefault(require(\"../rotation.js\"));\nvar _index = _interopRequireDefault(require(\"./index.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, (0, _math.log)((0, _math.tan)((_math.halfPi + phi) / 2))];\n}\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * (0, _math.atan)((0, _math.exp)(y)) - _math.halfPi];\n};\nfunction _default() {\n  return mercatorProjection(mercatorRaw).scale(961 / _math.tau);\n}\nfunction mercatorProjection(project) {\n  var m = (0, _index.default)(project),\n    center = m.center,\n    scale = m.scale,\n    translate = m.translate,\n    clipExtent = m.clipExtent,\n    x0 = null,\n    y0,\n    x1,\n    y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  function reclip() {\n    var k = _math.pi * scale(),\n      t = m((0, _rotation.default)(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n  return reclip();\n}"},"sourceMaps":null,"error":null,"hash":"ab2f086daaef566f20f3f3407b3d59b9","cacheData":{"env":{}}}