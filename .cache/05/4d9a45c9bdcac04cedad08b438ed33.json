{"id":"js/components/map-config.js","dependencies":[{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\package.json","includedInParent":true,"mtime":1741188834651}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initializeMap = initializeMap;\nexports.setupTileLayerErrorHandling = setupTileLayerErrorHandling;\n/**\n * Map configuration module\n * Handles the initialization and configuration of the map\n */\n\n/**\n * Initialize and configure the Leaflet map\n * @returns {Object} Map configuration object containing map instance and layers\n */\nfunction initializeMap() {\n  // Create the map instance\n  var map = L.map('map').setView([0, 0], 2); // Start with a global view\n\n  // Define marker icons\n  var countryIcon = L.divIcon({\n    className: 'custom-div-icon',\n    html: '<i style=\"color: #e5007d;\" class=\"fa fa-map-marker fa-3x\"></i>',\n    iconSize: [30, 42],\n    iconAnchor: [15, 42]\n  });\n  var specificIcon = L.divIcon({\n    className: 'custom-div-icon',\n    html: '<i style=\"color: #3694d1;\" class=\"fa fa-map-marker fa-3x\"></i>',\n    iconSize: [30, 42],\n    iconAnchor: [15, 42]\n  });\n\n  // Create tile layers\n  var openStreetMapLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    maxZoom: 10\n  });\n  var stamenTerrainLayer = L.tileLayer('https://stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}{r}.png', {\n    attribution: 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    subdomains: 'abcd',\n    minZoom: 0,\n    maxZoom: 10\n  });\n\n  // Add the default layer to the map\n  var currentLayer = openStreetMapLayer.addTo(map);\n\n  // Create and add marker cluster group\n  var markers = L.markerClusterGroup({\n    chunkedLoading: true,\n    chunkInterval: 200,\n    chunkDelay: 50\n  });\n  map.addLayer(markers);\n\n  // Create legend\n  var legend = L.control({\n    position: 'bottomright'\n  });\n  legend.onAdd = function (map) {\n    var div = L.DomUtil.create('div', 'info legend');\n    div.innerHTML = \"\\n            <div class=\\\"legend-content\\\">\\n                <h4>Location Precision</h4>\\n                <i style=\\\"color: #3694d1;\\\" class=\\\"fa fa-map-marker\\\"></i> Specific Location in Country (e.g., city, facility)<br>\\n                <i style=\\\"color: #e5007d;\\\" class=\\\"fa fa-map-marker\\\"></i> Country Only (no specific location)\\n            </div>\\n        \";\n    return div;\n  };\n  return {\n    map: map,\n    layers: {\n      openStreetMapLayer: openStreetMapLayer,\n      stamenTerrainLayer: stamenTerrainLayer,\n      currentLayer: currentLayer\n    },\n    markers: markers,\n    icons: {\n      countryIcon: countryIcon,\n      specificIcon: specificIcon\n    },\n    legend: legend,\n    legendAdded: false\n  };\n}\n\n/**\n * Set up tile layer error handling and switching\n * @param {Object} mapConfig - Map configuration object from initializeMap\n */\nfunction setupTileLayerErrorHandling(mapConfig) {\n  var map = mapConfig.map,\n    layers = mapConfig.layers;\n  var consecutiveErrors = 0;\n  var maxConsecutiveErrors = 5;\n  function switchTileLayer() {\n    map.removeLayer(layers.currentLayer);\n    if (layers.currentLayer === layers.openStreetMapLayer) {\n      layers.currentLayer = layers.stamenTerrainLayer.addTo(map);\n      console.log('Switched to Stamen Terrain tiles');\n    } else {\n      layers.currentLayer = layers.openStreetMapLayer.addTo(map);\n      console.log('Switched to OpenStreetMap tiles');\n    }\n  }\n  layers.currentLayer.on('tileerror', function (error) {\n    console.log('Tile loading error:', error);\n    consecutiveErrors++;\n    if (consecutiveErrors >= maxConsecutiveErrors) {\n      console.log(\"\".concat(maxConsecutiveErrors, \" consecutive errors. Switching tile layer.\"));\n      switchTileLayer();\n      consecutiveErrors = 0;\n    }\n  });\n  layers.currentLayer.on('tileload', function () {\n    consecutiveErrors = 0;\n  });\n}"},"sourceMaps":null,"error":null,"hash":"fb2864bf798359a70f00aa43e0f920a8","cacheData":{"env":{}}}