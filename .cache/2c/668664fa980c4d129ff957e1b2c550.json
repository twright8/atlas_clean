{"id":"../node_modules/d3-transition/src/transition/merge.js","dependencies":[{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\package.json","includedInParent":true,"mtime":1741868822789},{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-transition\\package.json","includedInParent":true,"mtime":1737120276076},{"name":"./index.js","loc":{"line":1,"column":25,"index":25},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-transition\\src\\transition\\merge.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-transition\\src\\transition\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nvar _index = require(\"./index.js\");\nfunction _default(transition) {\n  if (transition._id !== this._id) throw new Error();\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n  return new _index.Transition(merges, this._parents, this._name, this._id);\n}"},"sourceMaps":null,"error":null,"hash":"e87bbb91bcae53bdbe335ab77ff68120","cacheData":{"env":{}}}