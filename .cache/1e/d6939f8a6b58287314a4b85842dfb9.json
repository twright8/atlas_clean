{"id":"../node_modules/d3-geo/src/adder.js","dependencies":[{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\package.json","includedInParent":true,"mtime":1741868822789},{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\package.json","includedInParent":true,"mtime":1737120275660}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305â€“363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nfunction _default() {\n  return new Adder();\n}\nfunction Adder() {\n  this.reset();\n}\nAdder.prototype = {\n  constructor: Adder,\n  reset: function () {\n    this.s =\n    // rounded value\n    this.t = 0; // exact error\n  },\n  add: function (y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function () {\n    return this.s;\n  }\n};\nvar temp = new Adder();\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n    bv = x - a,\n    av = x - bv;\n  adder.t = a - av + (b - bv);\n}"},"sourceMaps":null,"error":null,"hash":"93a4ecd8d6cccd470257c30a10526ef7","cacheData":{"env":{}}}