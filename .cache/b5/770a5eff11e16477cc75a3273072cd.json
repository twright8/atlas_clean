{"id":"../node_modules/d3-hierarchy/src/pack/index.js","dependencies":[{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\package.json","includedInParent":true,"mtime":1742042086953},{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\package.json","includedInParent":true,"mtime":1737120275705},{"name":"./siblings.js","loc":{"line":1,"column":26,"index":26},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\pack\\index.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\pack\\siblings.js"},{"name":"../accessors.js","loc":{"line":2,"column":23,"index":67},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\pack\\index.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\accessors.js"},{"name":"../constant.js","loc":{"line":3,"column":37,"index":124},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\pack\\index.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\constant.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nvar _siblings = require(\"./siblings.js\");\nvar _accessors = require(\"../accessors.js\");\nvar _constant = _interopRequireWildcard(require(\"../constant.js\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\nfunction _default() {\n  var radius = null,\n    dx = 1,\n    dy = 1,\n    padding = _constant.constantZero;\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding, 0.5)).eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(_constant.constantZero, 1)).eachAfter(packChildren(padding, root.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n  pack.radius = function (x) {\n    return arguments.length ? (radius = (0, _accessors.optional)(x), pack) : radius;\n  };\n  pack.size = function (x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n  pack.padding = function (x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : (0, _constant.default)(+x), pack) : padding;\n  };\n  return pack;\n}\nfunction radiusLeaf(radius) {\n  return function (node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\nfunction packChildren(padding, k) {\n  return function (node) {\n    if (children = node.children) {\n      var children,\n        i,\n        n = children.length,\n        r = padding(node) * k || 0,\n        e;\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = (0, _siblings.packEnclose)(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\nfunction translateChild(k) {\n  return function (node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}"},"sourceMaps":null,"error":null,"hash":"258c31da6aad6880320ea53b5c8b9a57","cacheData":{"env":{}}}