{"id":"../node_modules/d3-hierarchy/src/stratify.js","dependencies":[{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\package.json","includedInParent":true,"mtime":1742042086953},{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\package.json","includedInParent":true,"mtime":1737120275705},{"name":"./accessors.js","loc":{"line":1,"column":23,"index":23},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\stratify.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\accessors.js"},{"name":"./hierarchy/index.js","loc":{"line":2,"column":34,"index":76},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\stratify.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nvar _accessors = require(\"./accessors.js\");\nvar _index = require(\"./hierarchy/index.js\");\nvar keyPrefix = \"$\",\n  // Protect against keys like “__proto__”.\n  preroot = {\n    depth: -1\n  },\n  ambiguous = {};\nfunction defaultId(d) {\n  return d.id;\n}\nfunction defaultParentId(d) {\n  return d.parentId;\n}\nfunction _default() {\n  var id = defaultId,\n    parentId = defaultParentId;\n  function stratify(data) {\n    var d,\n      i,\n      n = data.length,\n      root,\n      parent,\n      node,\n      nodes = new Array(n),\n      nodeId,\n      nodeKey,\n      nodeByKey = {};\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new _index.Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function (node) {\n      node.depth = node.parent.depth + 1;\n      --n;\n    }).eachBefore(_index.computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n    return root;\n  }\n  stratify.id = function (x) {\n    return arguments.length ? (id = (0, _accessors.required)(x), stratify) : id;\n  };\n  stratify.parentId = function (x) {\n    return arguments.length ? (parentId = (0, _accessors.required)(x), stratify) : parentId;\n  };\n  return stratify;\n}"},"sourceMaps":null,"error":null,"hash":"faeff692c7280cf347a53ac7474861d9","cacheData":{"env":{}}}