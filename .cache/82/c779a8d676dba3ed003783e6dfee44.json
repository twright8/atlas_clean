{"id":"../node_modules/d3-voronoi/src/Circle.js","dependencies":[{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\package.json","includedInParent":true,"mtime":1741868822789},{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-voronoi\\package.json","includedInParent":true,"mtime":1737120276105},{"name":"./RedBlackTree","loc":{"line":1,"column":27,"index":27},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-voronoi\\src\\Circle.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-voronoi\\src\\RedBlackTree.js"},{"name":"./Diagram","loc":{"line":2,"column":32,"index":78},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-voronoi\\src\\Circle.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-voronoi\\src\\Diagram.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.attachCircle = attachCircle;\nexports.detachCircle = detachCircle;\nexports.firstCircle = void 0;\nvar _RedBlackTree = require(\"./RedBlackTree\");\nvar _Diagram = require(\"./Diagram\");\nvar circlePool = [];\nvar firstCircle;\nfunction Circle() {\n  (0, _RedBlackTree.RedBlackNode)(this);\n  this.x = this.y = this.arc = this.site = this.cy = null;\n}\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n    rArc = arc.N;\n  if (!lArc || !rArc) return;\n  var lSite = lArc.site,\n    cSite = arc.site,\n    rSite = rArc.site;\n  if (lSite === rSite) return;\n  var bx = cSite[0],\n    by = cSite[1],\n    ax = lSite[0] - bx,\n    ay = lSite[1] - by,\n    cx = rSite[0] - bx,\n    cy = rSite[1] - by;\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -_Diagram.epsilon2) return;\n  var ha = ax * ax + ay * ay,\n    hc = cx * cx + cy * cy,\n    x = (cy * ha - ay * hc) / d,\n    y = (ax * hc - cx * ha) / d;\n  var circle = circlePool.pop() || new Circle();\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n  var before = null,\n    node = _Diagram.circles._;\n  while (node) {\n    if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n      if (node.L) node = node.L;else {\n        before = node.P;\n        break;\n      }\n    } else {\n      if (node.R) node = node.R;else {\n        before = node;\n        break;\n      }\n    }\n  }\n  _Diagram.circles.insert(before, circle);\n  if (!before) exports.firstCircle = firstCircle = circle;\n}\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) exports.firstCircle = firstCircle = circle.N;\n    _Diagram.circles.remove(circle);\n    circlePool.push(circle);\n    (0, _RedBlackTree.RedBlackNode)(circle);\n    arc.circle = null;\n  }\n}"},"sourceMaps":null,"error":null,"hash":"20d479eb8057de6f32db5834468e14fd","cacheData":{"env":{}}}