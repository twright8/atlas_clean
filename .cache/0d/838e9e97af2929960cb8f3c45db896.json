{"id":"../node_modules/d3-hierarchy/src/hierarchy/index.js","dependencies":[{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\package.json","includedInParent":true,"mtime":1741868822789},{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\package.json","includedInParent":true,"mtime":1737120275705},{"name":"./count.js","loc":{"line":1,"column":23,"index":23},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\index.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\count.js"},{"name":"./each.js","loc":{"line":2,"column":22,"index":60},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\index.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\each.js"},{"name":"./eachBefore.js","loc":{"line":3,"column":28,"index":102},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\index.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\eachBefore.js"},{"name":"./eachAfter.js","loc":{"line":4,"column":27,"index":149},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\index.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\eachAfter.js"},{"name":"./sum.js","loc":{"line":5,"column":21,"index":189},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\index.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\sum.js"},{"name":"./sort.js","loc":{"line":6,"column":22,"index":224},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\index.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\sort.js"},{"name":"./path.js","loc":{"line":7,"column":22,"index":260},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\index.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\path.js"},{"name":"./ancestors.js","loc":{"line":8,"column":27,"index":301},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\index.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\ancestors.js"},{"name":"./descendants.js","loc":{"line":9,"column":29,"index":349},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\index.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\descendants.js"},{"name":"./leaves.js","loc":{"line":10,"column":24,"index":394},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\index.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\leaves.js"},{"name":"./links.js","loc":{"line":11,"column":23,"index":433},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\index.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-hierarchy\\src\\hierarchy\\links.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Node = Node;\nexports.computeHeight = computeHeight;\nexports.default = hierarchy;\nvar _count = _interopRequireDefault(require(\"./count.js\"));\nvar _each = _interopRequireDefault(require(\"./each.js\"));\nvar _eachBefore = _interopRequireDefault(require(\"./eachBefore.js\"));\nvar _eachAfter = _interopRequireDefault(require(\"./eachAfter.js\"));\nvar _sum = _interopRequireDefault(require(\"./sum.js\"));\nvar _sort = _interopRequireDefault(require(\"./sort.js\"));\nvar _path = _interopRequireDefault(require(\"./path.js\"));\nvar _ancestors = _interopRequireDefault(require(\"./ancestors.js\"));\nvar _descendants = _interopRequireDefault(require(\"./descendants.js\"));\nvar _leaves = _interopRequireDefault(require(\"./leaves.js\"));\nvar _links = _interopRequireDefault(require(\"./links.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n    valued = +data.value && (root.value = data.value),\n    node,\n    nodes = [root],\n    child,\n    childs,\n    i,\n    n;\n  if (children == null) children = defaultChildren;\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n  return root.eachBefore(computeHeight);\n}\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\nfunction defaultChildren(d) {\n  return d.children;\n}\nfunction copyData(node) {\n  node.data = node.data.data;\n}\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height; while ((node = node.parent) && node.height < ++height);\n}\nfunction Node(data) {\n  this.data = data;\n  this.depth = this.height = 0;\n  this.parent = null;\n}\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: _count.default,\n  each: _each.default,\n  eachAfter: _eachAfter.default,\n  eachBefore: _eachBefore.default,\n  sum: _sum.default,\n  sort: _sort.default,\n  path: _path.default,\n  ancestors: _ancestors.default,\n  descendants: _descendants.default,\n  leaves: _leaves.default,\n  links: _links.default,\n  copy: node_copy\n};"},"sourceMaps":null,"error":null,"hash":"2f7377256cf267a7d42e78c1f99093f3","cacheData":{"env":{}}}