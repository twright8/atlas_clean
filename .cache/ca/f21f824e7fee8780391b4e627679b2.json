{"id":"modules/table.js","dependencies":[{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\package.json","includedInParent":true,"mtime":1742042086953},{"name":"./constants","loc":{"line":1,"column":34,"index":34},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\src\\modules\\table.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\src\\modules\\constants.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.getDataTable = getDataTable;\nexports.initializeDataTable = initializeDataTable;\nexports.updateDataTable = updateDataTable;\nvar _constants = require(\"./constants\");\nvar dataTable;\n\n/**\r\n * Initialize the data table with configuration\r\n * @returns {Object} DataTable instance\r\n */\nfunction initializeDataTable() {\n  console.time('DataTable Initialization');\n\n  // Extend jQuery DataTables with custom date sorting for European date format (dd/mm/yy)\n  extendDataTableSorting();\n\n  // Initialize the datatable with settings\n  dataTable = $('#dc-data-table').DataTable(_constants.dataTableSettings);\n  console.timeEnd('DataTable Initialization');\n  return dataTable;\n}\n\n/**\r\n * Extend DataTable with custom date sorting for European format dates\r\n */\nfunction extendDataTableSorting() {\n  jQuery.extend(jQuery.fn.dataTableExt.oSort, {\n    \"date-eu-pre\": function dateEuPre(date) {\n      if (date.indexOf(\"Cancelled\") > -1) {\n        date = date.split(\" \")[0];\n      }\n      return parseDateDMY(date);\n    },\n    \"date-eu-asc\": function dateEuAsc(a, b) {\n      return a < b ? -1 : a > b ? 1 : 0;\n    },\n    \"date-eu-desc\": function dateEuDesc(a, b) {\n      return a < b ? 1 : a > b ? -1 : 0;\n    }\n  });\n}\n\n/**\r\n * Parse date in dd/mm/yy format\r\n * @param {String} dateStr Date string to parse\r\n * @returns {Date|null} Parsed date or null\r\n */\nfunction parseDateDMY(dateStr) {\n  // Use d3's built-in parser or implement our own\n  var dmy = d3.timeParse(\"%d/%m/%y\");\n  return dmy(dateStr);\n}\n\n/**\r\n * Update the data table with new data\r\n * @param {Array} data Data array to display in the table\r\n */\nfunction updateDataTable(data) {\n  dataTable.clear().rows.add(data).draw();\n}\n\n/**\r\n * Get current data table instance\r\n * @returns {Object} DataTable instance\r\n */\nfunction getDataTable() {\n  return dataTable;\n}\nvar _default = exports.default = {\n  initializeDataTable: initializeDataTable,\n  updateDataTable: updateDataTable,\n  getDataTable: getDataTable\n};"},"sourceMaps":null,"error":null,"hash":"3c077f75867e0adfd0c9ee11297d2681","cacheData":{"env":{}}}