{"id":"../node_modules/d3-chord/src/ribbon.js","dependencies":[{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\package.json","includedInParent":true,"mtime":1742042086953},{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-chord\\package.json","includedInParent":true,"mtime":1737120275499},{"name":"./array","loc":{"line":1,"column":20,"index":20},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-chord\\src\\ribbon.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-chord\\src\\array.js"},{"name":"./constant","loc":{"line":2,"column":21,"index":53},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-chord\\src\\ribbon.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-chord\\src\\constant.js"},{"name":"./math","loc":{"line":3,"column":31,"index":99},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-chord\\src\\ribbon.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-chord\\src\\math.js"},{"name":"d3-path","loc":{"line":4,"column":19,"index":129},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-chord\\src\\ribbon.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-path\\src\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nvar _array = require(\"./array\");\nvar _constant = _interopRequireDefault(require(\"./constant\"));\nvar _math = require(\"./math\");\nvar _d3Path = require(\"d3-path\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction defaultSource(d) {\n  return d.source;\n}\nfunction defaultTarget(d) {\n  return d.target;\n}\nfunction defaultRadius(d) {\n  return d.radius;\n}\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\nfunction _default() {\n  var source = defaultSource,\n    target = defaultTarget,\n    radius = defaultRadius,\n    startAngle = defaultStartAngle,\n    endAngle = defaultEndAngle,\n    context = null;\n  function ribbon() {\n    var buffer,\n      argv = _array.slice.call(arguments),\n      s = source.apply(this, argv),\n      t = target.apply(this, argv),\n      sr = +radius.apply(this, (argv[0] = s, argv)),\n      sa0 = startAngle.apply(this, argv) - _math.halfPi,\n      sa1 = endAngle.apply(this, argv) - _math.halfPi,\n      sx0 = sr * (0, _math.cos)(sa0),\n      sy0 = sr * (0, _math.sin)(sa0),\n      tr = +radius.apply(this, (argv[0] = t, argv)),\n      ta0 = startAngle.apply(this, argv) - _math.halfPi,\n      ta1 = endAngle.apply(this, argv) - _math.halfPi;\n    if (!context) context = buffer = (0, _d3Path.path)();\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * (0, _math.cos)(ta0), tr * (0, _math.sin)(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n  ribbon.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : (0, _constant.default)(+_), ribbon) : radius;\n  };\n  ribbon.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : (0, _constant.default)(+_), ribbon) : startAngle;\n  };\n  ribbon.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : (0, _constant.default)(+_), ribbon) : endAngle;\n  };\n  ribbon.source = function (_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n  ribbon.target = function (_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n  ribbon.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;\n  };\n  return ribbon;\n}"},"sourceMaps":null,"error":null,"hash":"05761154b5c502755c34a118162686b5","cacheData":{"env":{}}}