{"id":"../node_modules/d3-geo/src/projection/identity.js","dependencies":[{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\package.json","includedInParent":true,"mtime":1741868822789},{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\package.json","includedInParent":true,"mtime":1737120275660},{"name":"../clip/rectangle.js","loc":{"line":1,"column":26,"index":26},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\src\\projection\\identity.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\src\\clip\\rectangle.js"},{"name":"../identity.js","loc":{"line":2,"column":21,"index":72},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\src\\projection\\identity.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\src\\identity.js"},{"name":"../transform.js","loc":{"line":3,"column":26,"index":117},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\src\\projection\\identity.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\src\\transform.js"},{"name":"./fit.js","loc":{"line":4,"column":54,"index":191},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\src\\projection\\identity.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\src\\projection\\fit.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nvar _rectangle = _interopRequireDefault(require(\"../clip/rectangle.js\"));\nvar _identity = _interopRequireDefault(require(\"../identity.js\"));\nvar _transform = require(\"../transform.js\");\nvar _fit = require(\"./fit.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? _identity.default : (0, _transform.transformer)({\n    point: function (x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\nfunction _default() {\n  var k = 1,\n    tx = 0,\n    ty = 0,\n    sx = 1,\n    sy = 1,\n    transform = _identity.default,\n    // scale, translate and reflect\n    x0 = null,\n    y0,\n    x1,\n    y1,\n    // clip extent\n    postclip = _identity.default,\n    cache,\n    cacheStream,\n    projection;\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n  return projection = {\n    stream: function (stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    },\n    postclip: function (_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function (_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity.default) : (0, _rectangle.default)(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function (_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function (_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function (_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function (_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function (extent, object) {\n      return (0, _fit.fitExtent)(projection, extent, object);\n    },\n    fitSize: function (size, object) {\n      return (0, _fit.fitSize)(projection, size, object);\n    },\n    fitWidth: function (width, object) {\n      return (0, _fit.fitWidth)(projection, width, object);\n    },\n    fitHeight: function (height, object) {\n      return (0, _fit.fitHeight)(projection, height, object);\n    }\n  };\n}"},"sourceMaps":null,"error":null,"hash":"d517f3962bdcf5a2b5d049834f0e03c3","cacheData":{"env":{}}}