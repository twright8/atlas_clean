{"id":"../node_modules/d3-scale/src/ordinal.js","dependencies":[{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\package.json","includedInParent":true,"mtime":1742042086953},{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-scale\\package.json","includedInParent":true,"mtime":1737120275874},{"name":"d3-collection","loc":{"line":1,"column":18,"index":18},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-scale\\src\\ordinal.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-collection\\src\\index.js"},{"name":"./array","loc":{"line":2,"column":20,"index":56},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-scale\\src\\ordinal.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-scale\\src\\array.js"},{"name":"./init","loc":{"line":3,"column":24,"index":92},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-scale\\src\\ordinal.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-scale\\src\\init.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ordinal;\nexports.implicit = void 0;\nvar _d3Collection = require(\"d3-collection\");\nvar _array = require(\"./array\");\nvar _init = require(\"./init\");\nvar implicit = exports.implicit = {\n  name: \"implicit\"\n};\nfunction ordinal() {\n  var index = (0, _d3Collection.map)(),\n    domain = [],\n    range = [],\n    unknown = implicit;\n  function scale(d) {\n    var key = d + \"\",\n      i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n  scale.domain = function (_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = (0, _d3Collection.map)();\n    var i = -1,\n      n = _.length,\n      d,\n      key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n  scale.range = function (_) {\n    return arguments.length ? (range = _array.slice.call(_), scale) : range.slice();\n  };\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n  scale.copy = function () {\n    return ordinal(domain, range).unknown(unknown);\n  };\n  _init.initRange.apply(scale, arguments);\n  return scale;\n}"},"sourceMaps":null,"error":null,"hash":"1ea761548ac2d7f8d13774aef6979038","cacheData":{"env":{}}}