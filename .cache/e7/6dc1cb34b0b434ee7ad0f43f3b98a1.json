{"id":"../node_modules/d3-array/src/threshold/freedmanDiaconis.js","dependencies":[{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\package.json","includedInParent":true,"mtime":1741868822789},{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-array\\package.json","includedInParent":true,"mtime":1737120275452},{"name":"../array","loc":{"line":1,"column":18,"index":18},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-array\\src\\threshold\\freedmanDiaconis.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-array\\src\\array.js"},{"name":"../ascending","loc":{"line":2,"column":22,"index":53},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-array\\src\\threshold\\freedmanDiaconis.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-array\\src\\ascending.js"},{"name":"../number","loc":{"line":3,"column":19,"index":89},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-array\\src\\threshold\\freedmanDiaconis.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-array\\src\\number.js"},{"name":"../quantile","loc":{"line":4,"column":21,"index":124},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-array\\src\\threshold\\freedmanDiaconis.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-array\\src\\quantile.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nvar _array = require(\"../array\");\nvar _ascending = _interopRequireDefault(require(\"../ascending\"));\nvar _number = _interopRequireDefault(require(\"../number\"));\nvar _quantile = _interopRequireDefault(require(\"../quantile\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _default(values, min, max) {\n  values = _array.map.call(values, _number.default).sort(_ascending.default);\n  return Math.ceil((max - min) / (2 * ((0, _quantile.default)(values, 0.75) - (0, _quantile.default)(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}"},"sourceMaps":null,"error":null,"hash":"1b02e83fffd371a96f512f42e2b24b8d","cacheData":{"env":{}}}