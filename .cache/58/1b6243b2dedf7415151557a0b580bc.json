{"id":"../node_modules/d3-geo/src/path/centroid.js","dependencies":[{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\package.json","includedInParent":true,"mtime":1741868822789},{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\package.json","includedInParent":true,"mtime":1737120275660},{"name":"../math.js","loc":{"line":1,"column":19,"index":19},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\src\\path\\centroid.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-geo\\src\\math.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _math = require(\"../math.js\");\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n  Y0 = 0,\n  Z0 = 0,\n  X1 = 0,\n  Y1 = 0,\n  Z1 = 0,\n  X2 = 0,\n  Y2 = 0,\n  Z2 = 0,\n  x00,\n  y00,\n  x0,\n  y0;\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function () {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function () {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function () {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\nfunction centroidPointLine(x, y) {\n  var dx = x - x0,\n    dy = y - y0,\n    z = (0, _math.sqrt)(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n    dy = y - y0,\n    z = (0, _math.sqrt)(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\nvar _default = exports.default = centroidStream;"},"sourceMaps":null,"error":null,"hash":"e6fad8ad1f7c42f7ca46b67d380cf22a","cacheData":{"env":{}}}