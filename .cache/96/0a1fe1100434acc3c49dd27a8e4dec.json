{"id":"../node_modules/d3-transition/src/transition/on.js","dependencies":[{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\package.json","includedInParent":true,"mtime":1741868822789},{"name":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-transition\\package.json","includedInParent":true,"mtime":1737120276076},{"name":"./schedule.js","loc":{"line":1,"column":29,"index":29},"parent":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-transition\\src\\transition\\on.js","resolved":"C:\\Users\\Tom\\PycharmProjects\\health_atlas\\atlas_clean\\node_modules\\d3-transition\\src\\transition\\schedule.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nvar _schedule = require(\"./schedule.js\");\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function (t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\nfunction onFunction(id, name, listener) {\n  var on0,\n    on1,\n    sit = start(name) ? _schedule.init : _schedule.set;\n  return function () {\n    var schedule = sit(this, id),\n      on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and weâ€™re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n    schedule.on = on1;\n  };\n}\nfunction _default(name, listener) {\n  var id = this._id;\n  return arguments.length < 2 ? (0, _schedule.get)(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));\n}"},"sourceMaps":null,"error":null,"hash":"185d0dd705b8395db29f6a41db56077b","cacheData":{"env":{}}}